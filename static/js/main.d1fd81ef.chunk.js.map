{"version":3,"sources":["img/characters/waldo.png","img/characters/wenda.png","img/characters/whitebeard.png","components/ui/Timer.js","components/layout/Navbar.js","components/ui/Popup.js","components/ui/FinishPopup.js","img/beach.jpg","views/ImageView.js","views/Leaderboard.js","views/Welcome.js","utilities/auth.js","App.js","index.js"],"names":["Timer","allFound","useState","time","setTime","useEffect","intervalId","setInterval","clearInterval","timeFormat","secs","seconds","Math","floor","minutes","formatTimer","pr","color","AvatarBox","motion","Avatar","Navbar","gameStart","foundCharacters","variants","found","backgroundColor","scale","notFound","p","flex","justify","as","RouterLink","to","name","src","waldoImage","whileHover","animate","waldo","wendaImage","wenda","whitebeardImage","magician","Popup","isOpen","onClose","mousePosition","handleClick","position","bg","left","x","top","y","onMouseLeave","onClick","value","FinishPopup","totalTime","setPlayerScores","database","gameOver","setGameOver","setName","useDisclosure","isOpenModal","onOpenModal","onOpen","onCloseModal","console","log","writeFirebase","a","addDoc","collection","isCentered","size","Fragment","mr","placeholder","onChange","e","target","prevState","ImageView","setFoundCharacters","setShowMenu","setMousePosition","imageNaturalHeight","setImageNaturalHeight","relativeCoords","setRelativeCoords","useRef","toast","useToast","variant","locations","pointA","pointB","whitebeard","character","capitalized","charAt","toUpperCase","slice","checkFound","clickedCoordinates","characterCoords","topBounds","bottomBounds","checkBounds","alert","title","duration","beach","clientX","clientY","bounds","getBoundingClientRect","imageProportion","current","height","displayMenu","className","ref","onLoad","image","naturalHeight","Leaderboard","scoreList","playerScores","sort","b","map","player","isNumeric","loading","border","borderRadius","mt","colorScheme","placement","undefined","Welcome","setInitialTime","setGameStart","handleStartClick","h","mb","align","pb","CheckCircleIcon","background","auth","process","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","db","getFirestore","getAuth","authInit","signInWithEmailAndPassword","then","userCredential","user","catch","error","errorCode","errorMessage","message","initialDataLoad","collectionRef","getDocs","snapshot","playersArray","docs","doc","docData","data","App","initialScores","setTotalTime","setAllFound","startTime","setStartTime","setDatabase","authMethods","loadData","endTime","Date","getTime","basename","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1fd81ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/waldo.82f9fb09.png\";","export default __webpack_public_path__ + \"static/media/wenda.11126878.png\";","export default __webpack_public_path__ + \"static/media/whitebeard.dcb5c308.png\";","import { Text } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst Timer = ({ allFound }) => {\n  const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    if (allFound) {\n      return;\n    }\n\n    const intervalId = setInterval(() => {\n      setTime(time + 1);\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [time]);\n\n  const formatTimer = (secs) => {\n    let seconds = Math.floor(secs % 60);\n    let minutes = Math.floor(secs / 60);\n\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n\n    return `${minutes}:${seconds}`;\n  };\n\n  let timeFormat = formatTimer(time);\n  let finalTimer;\n  if (allFound) {\n    finalTimer = \"\";\n  } else {\n    finalTimer = (\n      <Text pr={30} color=\"gray.500\">\n        {timeFormat}\n      </Text>\n    );\n  }\n  return finalTimer;\n};\n\nexport default Timer;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Center, Flex, Heading, HStack, Text } from \"@chakra-ui/layout\";\nimport { Link } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport { motion } from \"framer-motion\";\n\nimport waldoImage from \"../../img/characters/waldo.png\";\nimport wendaImage from \"../../img/characters/wenda.png\";\nimport whitebeardImage from \"../../img/characters/whitebeard.png\";\n\nimport Timer from \"../ui/Timer\";\n\nconst AvatarBox = motion(Avatar);\n\nconst Navbar = ({ gameStart, foundCharacters, allFound }) => {\n  const variants = {\n    found: {\n      backgroundColor: \"green\",\n      scale: [1, 0.5, 1.2, 0.5, 1],\n    },\n    notFound: { backgroundColor: \"gray\" },\n  };\n\n  return (\n    <HStack p={4}>\n      <Flex flex=\"1\" justify=\"flex-start\">\n        <HStack>\n          <Link as={RouterLink} to=\"/game\">\n            Find Waldo\n          </Link>\n          <AvatarBox\n            name=\"Waldo\"\n            src={waldoImage}\n            whileHover={{ scale: 1.1 }}\n            variants={variants}\n            animate={foundCharacters.waldo ? \"found\" : \"notFound\"}\n          />\n          <AvatarBox\n            name=\"Wenda\"\n            src={wendaImage}\n            variants={variants}\n            animate={foundCharacters.wenda ? \"found\" : \"notFound\"}\n          />\n          <AvatarBox\n            name=\"Magician\"\n            src={whitebeardImage}\n            variants={variants}\n            animate={foundCharacters.magician ? \"found\" : \"notFound\"}\n          />\n        </HStack>\n      </Flex>\n      <Flex flex=\"1\" justify=\"center\">\n        <Center>\n          <Heading as={RouterLink} to=\"/game\">\n            Where's Waldo?\n          </Heading>\n        </Center>\n      </Flex>\n      <Flex flex=\"1\" justify=\"flex-end\">\n        {gameStart && <Timer allFound={allFound} />}\n        <Link as={RouterLink} to=\"/leaderboard\">\n          View Leaderboard\n        </Link>\n      </Flex>\n    </HStack>\n  );\n};\n\nexport default Navbar;\n","import { Box } from \"@chakra-ui/layout\";\nimport { Menu, MenuItem, MenuList } from \"@chakra-ui/menu\";\n\nconst Popup = ({ isOpen, onClose, mousePosition, handleClick }) => {\n  return (\n    <Box\n      position=\"absolute\"\n      bg=\"blue.400\"\n      left={mousePosition.x}\n      top={mousePosition.y}\n    >\n      <Menu isOpen={isOpen}>\n        <MenuList onMouseLeave={onClose}>\n          <MenuItem onClick={handleClick} value=\"waldo\">\n            Waldo\n          </MenuItem>\n          <MenuItem onClick={handleClick} value=\"wenda\">\n            Wenda\n          </MenuItem>\n          <MenuItem onClick={handleClick} value=\"whitebeard\">\n            Magician\n          </MenuItem>\n        </MenuList>\n      </Menu>\n    </Box>\n  );\n};\n\nexport default Popup;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  Button,\n  useDisclosure,\n  Heading,\n  Input,\n} from \"@chakra-ui/react\";\nimport { addDoc, collection } from \"firebase/firestore/lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst FinishPopup = ({\n  totalTime,\n  allFound,\n  setPlayerScores,\n  database,\n  gameOver,\n  setGameOver,\n}) => {\n  const [name, setName] = useState();\n\n  const {\n    isOpen: isOpenModal,\n    onOpen: onOpenModal,\n    onClose: onCloseModal,\n  } = useDisclosure();\n\n  //Check if Game Over\n  useEffect(() => {\n    if (allFound) {\n      if (!isOpenModal) {\n        onOpenModal();\n      }\n    }\n    console.log(allFound);\n  }, [allFound]);\n\n  const writeFirebase = async () => {\n    const docRef = await addDoc(collection(database, \"players\"), {\n      name: name,\n      time: totalTime,\n    });\n    setGameOver(true);\n  };\n\n  const handleSaveClick = () => {\n    setPlayerScores((prevState) => [\n      ...prevState,\n      { name: name, time: totalTime },\n    ]);\n    writeFirebase();\n  };\n\n  return (\n    <Modal isOpen={isOpenModal} onClose={onCloseModal} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>You Win!</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          Your time was\n          <Heading size=\"3xl\" color=\"green.300\">\n            {totalTime}\n          </Heading>\n        </ModalBody>\n        <ModalFooter>\n          {!gameOver && (\n            <React.Fragment>\n              <Input\n                mr={2}\n                placeholder=\"Enter your name\"\n                onChange={(e) => setName(e.target.value)}\n              ></Input>\n              <Button\n                as={RouterLink}\n                onClick={handleSaveClick}\n                to=\"/leaderboard\"\n              >\n                Save Score\n              </Button>\n            </React.Fragment>\n          )}\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default FinishPopup;\n","export default __webpack_public_path__ + \"static/media/beach.a0e0289e.jpg\";","import { Box, Heading } from \"@chakra-ui/layout\";\nimport { Image, useToast } from \"@chakra-ui/react\";\nimport React, { useEffect, useState, useRef } from \"react\";\n\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useDisclosure,\n} from \"@chakra-ui/react\";\n\nimport Popup from \"../components/ui/Popup\";\nimport FinishPopup from \"../components/ui/FinishPopup\";\n\nimport beach from \"../img/beach.jpg\";\n\nconst ImageView = ({\n  allFound,\n  totalTime,\n  setFoundCharacters,\n  setPlayerScores,\n  database,\n  gameOver,\n  setGameOver,\n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [imageNaturalHeight, setImageNaturalHeight] = useState();\n  const [relativeCoords, setRelativeCoords] = useState({ x: null, y: null });\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  let waldoImage = useRef();\n  const toast = useToast({\n    variant: \"solid\",\n  });\n\n  const locations = {\n    waldo: { pointA: { x: 1824, y: 711 }, pointB: { x: 1877, y: 789 } },\n    wenda: { pointA: { x: 2296, y: 772 }, pointB: { x: 2344, y: 818 } },\n    whitebeard: { pointA: { x: 783, y: 650 }, pointB: { x: 856, y: 747 } },\n  };\n\n  const displayMenu = (\n    setMousePosition,\n    onOpen,\n    onClose,\n    isOpen,\n    mousePosition\n  ) => {\n    if (isOpen) {\n      onClose();\n    } else {\n      setMousePosition(mousePosition);\n\n      onOpen();\n    }\n  };\n\n  const checkBounds = (clickedCoordinates, character) => {\n    let characterCoords = locations[character];\n\n    let topBounds =\n      clickedCoordinates.x >= characterCoords.pointA.x &&\n      clickedCoordinates.x <= characterCoords.pointB.x;\n    let bottomBounds =\n      clickedCoordinates.y >= characterCoords.pointA.y &&\n      clickedCoordinates.y <= characterCoords.pointB.y;\n\n    return topBounds && bottomBounds;\n  };\n\n  // useEffect(() => {\n  //   let imageRef = waldoImage.current;\n  //   setImageNaturalHeight(imageRef.naturalHeight);\n  // }, []);\n\n  function handleImgLoad(e) {\n    let image = e.target;\n    setImageNaturalHeight(image.naturalHeight);\n  }\n\n  function getMousePosition(e) {\n    let mousePosition = { x: e.clientX, y: e.clientY };\n    var bounds = e.target.getBoundingClientRect();\n\n    let currentHeight = waldoImage.current.height;\n\n    // Rounds to 2 decimal points (Math.round(num * 100) / 100)\n    let imageProportion = currentHeight / imageNaturalHeight;\n\n    // Proportional mousemousePosition of mouse on image\n    var x = Math.floor((e.clientX - bounds.left) / imageProportion);\n    var y = Math.floor((e.clientY - bounds.top) / imageProportion);\n    console.log(x, y);\n    setRelativeCoords({ x: x, y: y });\n\n    displayMenu(setMousePosition, onOpen, onClose, isOpen, mousePosition);\n    setShowMenu(true);\n  }\n\n  const handleClick = (e) => {\n    let character = e.target.value;\n    let capitalized = character.charAt(0).toUpperCase() + character.slice(1);\n    console.log(capitalized);\n    let checkFound = checkBounds(relativeCoords, character);\n    if (!checkFound) {\n      onClose();\n      toast({\n        title: `Sorry, no ${capitalized} there.`,\n        duration: 1800,\n        position: \"top\",\n      });\n    } else {\n      switch (character) {\n        case \"waldo\":\n          setFoundCharacters((prevState) => ({\n            ...prevState,\n            waldo: true,\n          }));\n          break;\n        case \"wenda\":\n          setFoundCharacters((prevState) => ({\n            ...prevState,\n            wenda: true,\n          }));\n\n          break;\n        case \"whitebeard\":\n          setFoundCharacters((prevState) => ({\n            ...prevState,\n            magician: true,\n          }));\n\n          break;\n        default:\n          alert(\"error in character finding\");\n          break;\n      }\n      onClose();\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Popup\n        isOpen={isOpen}\n        onClose={onClose}\n        mousePosition={mousePosition}\n        handleClick={handleClick}\n      />\n      <FinishPopup\n        totalTime={totalTime}\n        allFound={allFound}\n        setPlayerScores={setPlayerScores}\n        database={database}\n        gameOver={gameOver}\n        setGameOver={setGameOver}\n      />\n      {/* <Modal isOpen={isOpenModal} onClose={onCloseModal}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>You Win!</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>Your time was {totalTime}</ModalBody>\n          <ModalFooter>\n            <Button onClick={onCloseModal}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal> */}\n\n      <Image\n        src={beach}\n        value=\"waldoImage\"\n        onClick={getMousePosition}\n        className=\"waldoImage\"\n        ref={waldoImage}\n        onLoad={handleImgLoad}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ImageView;\n","import React, { useEffect } from \"react\";\nimport {\n  VStack,\n  Heading,\n  Box,\n  Text,\n  Table,\n  Thead,\n  Th,\n  Tbody,\n  Tr,\n  Td,\n  Container,\n  Tfoot,\n  TableCaption,\n} from \"@chakra-ui/react\";\n\nconst Leaderboard = ({ playerScores }) => {\n  const sortPlayers = (scores) => {\n    return scores.sort(function (a, b) {\n      if (a[\"time\"] < b[\"time\"]) {\n        return -1;\n      } else if (a[\"time\"] > b[\"time\"]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  };\n\n  let scoreList;\n\n  if (playerScores) {\n    let sortedScores = sortPlayers(playerScores);\n\n    scoreList = sortedScores.map((player) => {\n      console.log(player);\n      return (\n        <Tr key={player.name}>\n          <Td>{player.name}</Td>\n          <Td isNumeric>{player.time}</Td>\n        </Tr>\n      );\n    });\n  }\n\n  let loading = (\n    <Tr>\n      <Td>Loading...</Td>\n      <Td></Td>\n    </Tr>\n  );\n\n  return (\n    <Container border=\"1px\" borderRadius=\"md\" mt={10}>\n      <Table variant=\"striped\" colorScheme=\"gray\">\n        <TableCaption placement=\"top\">Player Leaderboard</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Player</Th>\n            <Th isNumeric>Time</Th>\n          </Tr>\n        </Thead>\n        <Tbody>{scoreList === undefined ? loading : scoreList}</Tbody>\n        <Tfoot>\n          <Tr>\n            <Th> </Th>\n          </Tr>\n        </Tfoot>\n      </Table>\n    </Container>\n  );\n};\n\nexport default Leaderboard;\n","import {\n  Button,\n  Center,\n  Heading,\n  List,\n  ListItem,\n  VStack,\n  Text,\n  ListIcon,\n  Box,\n} from \"@chakra-ui/react\";\nimport { CheckCircleIcon } from \"@chakra-ui/icons\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport React from \"react\";\n\nconst Welcome = ({ setInitialTime, setGameStart, handleStartClick }) => {\n  return (\n    <Center h=\"500px\">\n      <VStack>\n        <Heading mb={10} size=\"4xl\" align=\"center\">\n          Welcome to the Game\n        </Heading>\n        <Box>\n          <Text pb={3}>Ther rules are simple:</Text>\n          <List pb={10}>\n            <ListItem>\n              <ListIcon as={CheckCircleIcon} />\n              Find all 3 Characters\n            </ListItem>\n            <ListItem>\n              <ListIcon as={CheckCircleIcon} />\n              The faster the better!\n            </ListItem>\n            <ListItem>\n              <ListIcon as={CheckCircleIcon} />\n              Compare your time against others\n            </ListItem>\n          </List>\n        </Box>\n        <Center>\n          <Button\n            background=\"purple.500\"\n            align=\"center\"\n            as={RouterLink}\n            to=\"/game\"\n            onClick={handleStartClick}\n          >\n            Get Started\n          </Button>\n        </Center>\n      </VStack>\n    </Center>\n  );\n};\n\nexport default Welcome;\n","import { collection, getDocs, getFirestore } from \"firebase/firestore/lite\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n\nconst auth = async function () {\n  console.log(process.env.REACT_APP_apiKey);\n\n  const firebaseConfig = {\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId,\n  };\n\n  // Initialize Firebase\n\n  const app = initializeApp(firebaseConfig);\n  const db = getFirestore(app);\n  const auth = getAuth();\n\n  const authInit = async () => {\n    // Sign in\n    console.log(process.env.REACT_APP_email);\n    console.log(process.env.REACT_APP_password);\n    signInWithEmailAndPassword(\n      auth,\n      process.env.REACT_APP_email,\n      process.env.REACT_APP_password\n    )\n      .then((userCredential) => {\n        //Signed in\n        const user = userCredential.user;\n        console.log(\"Signed in\");\n        console.log(user);\n      })\n      .catch((error) => {\n        const errorCode = error.errorCode;\n        const errorMessage = error.message;\n        console.log(\"Could not sign in\");\n        console.log(errorMessage);\n      });\n  };\n\n  const initialDataLoad = async () => {\n    const collectionRef = collection(db, \"players\");\n    const snapshot = await getDocs(collectionRef);\n    let playersArray = snapshot.docs.map((doc) => {\n      let docData = doc.data();\n      return { name: docData.name, time: docData.time };\n    });\n\n    return playersArray;\n  };\n\n  return { authInit, initialDataLoad, db };\n};\n\nexport default auth;\n","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport { useState } from \"react\";\nimport Navbar from \"./components/layout/Navbar\";\n\nimport ImageView from \"./views/ImageView\";\nimport Leaderboard from \"./views/Leaderboard\";\nimport Welcome from \"./views/Welcome\";\n\nimport auth from \"./utilities/auth\";\n\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\n\nconst App = ({ initialScores }) => {\n  const [foundCharacters, setFoundCharacters] = useState({\n    waldo: false,\n    wenda: false,\n    magician: false,\n  });\n  const [totalTime, setTotalTime] = useState(false);\n  const [gameStart, setGameStart] = useState(false);\n  const [allFound, setAllFound] = useState(false);\n  const [startTime, setStartTime] = useState(undefined);\n  const [playerScores, setPlayerScores] = useState(initialScores);\n  const [database, setDatabase] = useState(\"none\");\n  const [gameOver, setGameOver] = useState(false);\n\n  //Handle Start Click in Welcome\n  const handleStartClick = () => {\n    setStartTime(new Date().getTime());\n    console.log(startTime);\n    setGameStart(true);\n  };\n\n  //Wait for load on async\n  useEffect(() => {\n    async function loadData() {\n      let authMethods = await auth();\n      const login = await authMethods.authInit();\n      const initialScores = await authMethods.initialDataLoad();\n      setPlayerScores(initialScores);\n      setDatabase(authMethods.db);\n    }\n\n    loadData();\n  }, []);\n\n  //Write new data into\n\n  //Check for Endgame\n  useEffect(() => {\n    if (\n      foundCharacters.waldo &&\n      foundCharacters.wenda &&\n      foundCharacters.magician\n    ) {\n      console.log(startTime);\n      let endTime = new Date().getTime();\n      setTotalTime((endTime - startTime) / 1000);\n      setAllFound(true);\n    }\n  }, [foundCharacters]);\n\n  return (\n    <Router basename=\"/photoTagging\">\n      <Navbar\n        foundCharacters={foundCharacters}\n        gameStart={gameStart}\n        allFound={allFound}\n      />\n      <Routes>\n        <Route\n          exact\n          path=\"/\"\n          element={\n            <Welcome\n              handleStartClick={handleStartClick}\n              setGameStart={setGameStart}\n            />\n          }\n        />\n        <Route\n          path=\"/game\"\n          element={\n            <ImageView\n              allFound={allFound}\n              totalTime={totalTime}\n              setFoundCharacters={setFoundCharacters}\n              setPlayerScores={setPlayerScores}\n              database={database}\n              gameOver={gameOver}\n              setGameOver={setGameOver}\n            />\n          }\n        />\n        <Route\n          path=\"/leaderboard\"\n          element={<Leaderboard playerScores={playerScores} />}\n        />{\" \"}\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}